// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XIVMarketBoard_Api.Data;

#nullable disable

namespace XIVMarketBoard_Api.Migrations
{
    [DbContext(typeof(XivDbContext))]
    partial class XivDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.DataCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataCenters");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanBeCrafted")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanBeHq")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMarketable")
                        .HasColumnType("boolean");

                    b.Property<int?>("ItemSearchCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemUICategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_ja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemSearchCategoryId");

                    b.HasIndex("ItemUICategoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.ItemSearchCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_ja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemSearchCategory");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.ItemUICategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_ja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemUICategory");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ClassJobCategoryTargetID")
                        .HasColumnType("integer");

                    b.Property<int?>("DohDolJobIndex")
                        .HasColumnType("integer");

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_ja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.MbPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<bool>("HighQuality")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastReviewDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int?>("RetainerId")
                        .HasColumnType("integer");

                    b.Property<string>("RetainerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double precision");

                    b.Property<int?>("UniversalisEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RetainerId");

                    b.HasIndex("UniversalisEntryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountResult")
                        .HasColumnType("integer");

                    b.Property<bool>("IsExpert")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpecializationRequired")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.Property<string>("Name_de")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_fr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name_ja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("JobId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Retainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("WorldId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorldId");

                    b.ToTable("Retainers");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.SaleHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerName")
                        .HasColumnType("text");

                    b.Property<bool>("HighQuality")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.Property<int?>("UniversalisEntryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UniversalisEntryId");

                    b.ToTable("SaleHistory");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.UniversalisEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePrice")
                        .HasColumnType("double precision");

                    b.Property<double>("AveragePriceHQ")
                        .HasColumnType("double precision");

                    b.Property<double>("AveragePriceNQ")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentAveragePrice")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentAveragePriceHQ")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentAveragePrinceNQ")
                        .HasColumnType("double precision");

                    b.Property<int?>("HqListingsCount")
                        .HasColumnType("integer");

                    b.Property<int?>("HqSaleCount")
                        .HasColumnType("integer");

                    b.Property<double>("HqSaleVelocity")
                        .HasColumnType("double precision");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("MaxPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxPriceHQ")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxPriceNQ")
                        .HasColumnType("double precision");

                    b.Property<double>("MinPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("MinPriceHQ")
                        .HasColumnType("double precision");

                    b.Property<double>("MinPriceNQ")
                        .HasColumnType("double precision");

                    b.Property<int?>("NqListingsCount")
                        .HasColumnType("integer");

                    b.Property<int?>("NqSaleCount")
                        .HasColumnType("integer");

                    b.Property<double>("NqSaleVelocity")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("QueryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("RegularSaleVelocity")
                        .HasColumnType("double precision");

                    b.Property<int>("WorldId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("WorldId");

                    b.ToTable("UniversalisEntries");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<bool>("ApiAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("CharacterName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WebAdmin")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DataCenterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DataCenterId");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Ingredient", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVMarketBoard_Api.Entities.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Item", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.ItemSearchCategory", "ItemSearchCategory")
                        .WithMany()
                        .HasForeignKey("ItemSearchCategoryId");

                    b.HasOne("XIVMarketBoard_Api.Entities.ItemUICategory", "ItemUICategory")
                        .WithMany()
                        .HasForeignKey("ItemUICategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemSearchCategory");

                    b.Navigation("ItemUICategory");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Job", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.User", null)
                        .WithMany("Jobs")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.MbPost", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.Retainer", "Retainer")
                        .WithMany()
                        .HasForeignKey("RetainerId");

                    b.HasOne("XIVMarketBoard_Api.Entities.UniversalisEntry", null)
                        .WithMany("Posts")
                        .HasForeignKey("UniversalisEntryId");

                    b.HasOne("XIVMarketBoard_Api.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Retainer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Recipe", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVMarketBoard_Api.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Retainer", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("XIVMarketBoard_Api.Entities.World", "World")
                        .WithMany()
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("World");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.SaleHistory", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.UniversalisEntry", null)
                        .WithMany("SaleHistory")
                        .HasForeignKey("UniversalisEntryId");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.UniversalisEntry", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVMarketBoard_Api.Entities.World", "World")
                        .WithMany()
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("World");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.World", b =>
                {
                    b.HasOne("XIVMarketBoard_Api.Entities.DataCenter", "DataCenter")
                        .WithMany()
                        .HasForeignKey("DataCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataCenter");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.UniversalisEntry", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("SaleHistory");
                });

            modelBuilder.Entity("XIVMarketBoard_Api.Entities.User", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
